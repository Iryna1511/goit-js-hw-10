{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.getElementById('datetime-picker');\nconst showDays = document.querySelector('span[data-days]');\nconst showHours = document.querySelector('span[data-hours]');\nconst showMinutes = document.querySelector('span[data-minutes]');\nconst showSeconds = document.querySelector('span[data-seconds]');\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\n\nlet userSelectedDate;\nlet intervalTime;\nlet intervalId;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    intervalTime = userSelectedDate - Date.now();\n    if (intervalTime < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      startBtn.disabled = true;\n      return;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', handleStart);\nfunction handleStart(event) {\n  startBtn.disabled = true;\n  inputEl.disabled = true;\n\n  intervalId = setInterval(() => {\n    intervalTime = userSelectedDate - Date.now();\n    const showTime = convertMs(intervalTime);\n    showDays.textContent = showTime.days.toString().padStart(2, 0);\n    showHours.textContent = showTime.hours.toString().padStart(2, 0);\n    showMinutes.textContent = showTime.minutes.toString().padStart(2, 0);\n    showSeconds.textContent = showTime.seconds.toString().padStart(2, 0);\n\n    if (intervalTime < 1000) {\n      clearInterval(intervalId);\n      inputEl.disabled = false;\n    }\n  }, 1000);\n}\n"],"names":["inputEl","showDays","showHours","showMinutes","showSeconds","startBtn","userSelectedDate","intervalTime","intervalId","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","handleStart","event","showTime"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,eAAe,iBAAiB,EACnDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GAEpB,IAAIC,EACAC,EACAC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAJ,EAAmBI,EAAc,CAAC,EAClCH,EAAeD,EAAmB,KAAK,MACnCC,EAAe,EAAG,CACpBI,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDN,EAAS,SAAW,GACpB,MACN,MACMA,EAAS,SAAW,EAEvB,CACH,EAEAO,EAAUZ,EAASS,CAAO,EAE1B,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAb,EAAS,iBAAiB,QAASc,CAAW,EAC9C,SAASA,EAAYC,EAAO,CAC1Bf,EAAS,SAAW,GACpBL,EAAQ,SAAW,GAEnBQ,EAAa,YAAY,IAAM,CAC7BD,EAAeD,EAAmB,KAAK,MACvC,MAAMe,EAAWR,EAAUN,CAAY,EACvCN,EAAS,YAAcoB,EAAS,KAAK,SAAQ,EAAG,SAAS,EAAG,CAAC,EAC7DnB,EAAU,YAAcmB,EAAS,MAAM,SAAQ,EAAG,SAAS,EAAG,CAAC,EAC/DlB,EAAY,YAAckB,EAAS,QAAQ,SAAQ,EAAG,SAAS,EAAG,CAAC,EACnEjB,EAAY,YAAciB,EAAS,QAAQ,SAAQ,EAAG,SAAS,EAAG,CAAC,EAE/Dd,EAAe,MACjB,cAAcC,CAAU,EACxBR,EAAQ,SAAW,GAEtB,EAAE,GAAI,CACT"}